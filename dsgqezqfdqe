1️⃣ Gestion des utilisateurs Windows
📍 Étape 1 : Création des utilisateurs et des groupes
Dans PowerShell, exécute ces commandes :

Créer les groupes (grp1, grp2, grp3) :

powershell
Copier
Modifier
New-LocalGroup -Name "grp1"
New-LocalGroup -Name "grp2"
New-LocalGroup -Name "grp3"
Créer les utilisateurs (user1, user2, user3) :

powershell
Copier
Modifier
New-LocalUser -Name "user1" -Password (ConvertTo-SecureString "P@ssword1" -AsPlainText -Force) -FullName "Tux1" -Description "Utilisateur 1"
New-LocalUser -Name "user2" -Password (ConvertTo-SecureString "P@ssword2" -AsPlainText -Force)
New-LocalUser -Name "user3" -Password (ConvertTo-SecureString "P@ssword3" -AsPlainText -Force) -UserMayChangePassword $false -AccountNeverExpires $true
# Création de user3
New-LocalUser -Name "user3" -Password (ConvertTo-SecureString "P@ssword3" -AsPlainText -Force)

# Désactiver la possibilité de changer le mot de passe et activer "ne jamais expirer"
net user user3 /Passwordchg:no /Expires:never
Attribuer les groupes aux utilisateurs :

powershell
Copier
Modifier
Add-LocalGroupMember -Group "grp1" -Member "user1"
Add-LocalGroupMember -Group "grp2" -Member "user2"
Add-LocalGroupMember -Group "grp3" -Member "user3"
Add-LocalGroupMember -Group "grp3" -Member "user2"
Add-LocalGroupMember -Group "grp1" -Member "user2"
Créer un utilisateur avec ton prénom dans le groupe Administrateurs :

powershell
Copier
Modifier
New-LocalUser -Name "MonPrenom" -Password (ConvertTo-SecureString "AdminPass" -AsPlainText -Force)
Add-LocalGroupMember -Group "Administrators" -Member "MonPrenom"
📍 Étape 2 : Modifier un mot de passe en ligne de commande
Change le mot de passe de user1 :

powershell
Copier
Modifier
Set-LocalUser -Name "user1" -Password (ConvertTo-SecureString "NewP@ssword1" -AsPlainText -Force)
📍 Étape 3 : Lister les utilisateurs et groupes
Lister les utilisateurs locaux :

powershell
Copier
Modifier
Get-LocalUser
Lister les groupes locaux :

powershell
Copier
Modifier
Get-LocalGroup
Lister les membres d’un groupe spécifique (grp1) :

powershell
Copier
Modifier
Get-LocalGroupMember -Group "grp1"
Exporter ces infos dans un fichier ex2.txt :

powershell
Copier
Modifier
Get-LocalUser > C:\Users\Public\ex2.txt
Get-LocalGroup >> C:\Users\Public\ex2.txt
2️⃣ Gestion des permissions Windows
📍 Étape 1 : Créer un dossier et des fichiers
Connecte-toi avec l’utilisateur MonPrenom (créé plus tôt) et exécute :

powershell
Copier
Modifier
New-Item -Path "C:\Users\Labo9" -ItemType Directory
New-Item -Path "C:\Users\Labo9\file1.txt" -ItemType File
New-Item -Path "C:\Users\Labo9\file2.txt" -ItemType File
📍 Étape 2 : Modifier les permissions
Fichier 1 : Mettre en lecture seule pour grp1 (via GUI)

Clic droit sur file1.txt > Propriétés > Sécurité > Modifier

Ajouter grp1, cocher Lecture seule, Appliquer.

Fichier 2 : Lire/écrire/exécuter pour user2 (via PowerShell)

powershell
Copier
Modifier
$acl = Get-Acl "C:\Users\Labo9\file2.txt"
$rule = New-Object System.Security.AccessControl.FileSystemAccessRule("user2", "FullControl", "Allow")
$acl.SetAccessRule($rule)
Set-Acl "C:\Users\Labo9\file2.txt" $acl
📍 Étape 3 : Vérifier les permissions
Teste avec les utilisateurs user1 et user2 :

user1 : essaie de modifier file1.txt → ça devrait échouer.

user2 : essaie de modifier file2.txt → ça devrait réussir.

📍 Étape 4 : Script de vérification des droits
Crée un fichier siontedisquelelaifait.ps1 contenant :

powershell
Copier
Modifier
Get-ChildItem -Path "C:\Users\Labo9" -Recurse | ForEach-Object {
    $acl = Get-Acl $_.FullName
    Write-Output "Fichier : $($_.Name)"
    Write-Output "Propriétaire : $($acl.Owner)"
    Write-Output "Groupe : $($acl.Group)"
    Write-Output "Droits d'accès :"
    foreach ($rule in $acl.Access) {
        Write-Output " - $rule"
    }
    Write-Output ""
}
Puis exécute-le :

powershell
Copier
Modifier
.\siontedisquelelaifait.ps1 > C:\Users\Public\ex3.txt
3️⃣ Stratégie d’audit Windows
📍 Étape 1 : Activer l’audit des connexions
Ouvre la Stratégie de Sécurité Locale (secpol.msc)

Va dans : Stratégies locales > Stratégie d’audit

Active l’audit des événements suivants :

"Ouverture/fermeture de session" → Cocher Succès et Échec.

"Création et fin d'un processus" → Cocher Succès et Échec.

Appliquer et fermer.

📍 Étape 2 : Tester l’audit des connexions
Ouvre l’Observateur d’événements (eventvwr.msc)

Va dans : Journaux Windows > Sécurité

Créer un filtre :

Catégorie : Connexion et Déconnexion.

Supprime les événements du journal pour voir les nouveaux logs plus facilement.

Test :

Essaie de te connecter avec un utilisateur.

Fais exprès de rater le mot de passe plusieurs fois.

Vérifie si des logs sont générés.

📍 Étape 3 : Auditer la création de processus
Ouvre l’Observateur d’événements (eventvwr.msc)

Va dans : Journaux Windows > Sécurité

Créer un filtre :

Catégorie : Création et fin de processus.

Test :

Ouvre et ferme Notepad (Bloc-notes).

Vérifie si des logs apparaissent.

📍 Étape 4 : Exporter les logs
Exécute :

powershell
Copier
Modifier
Get-EventLog -LogName Security | Where-Object { $_.EventID -eq 4624 -or $_.EventID -eq 4625 } | 
Select-Object TimeGenerated, EventID, Message | Export-Csv -Path C:\Users\Public\ex4.csv -NoTypeInformation
📌 Résumé des fichiers générés
📂 ex2.txt → Liste des utilisateurs et groupes.
📂 ex3.txt → Liste des permissions.
📂 ex4.csv → Journal des connexions.
